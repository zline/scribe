# Main log storage is in HDFS, and also we'd like to do some ad-hoc realtime
# processing using dedicated servers. So, log stream has to be duplicated
# (duplicated to so-called sidestream).
# But, our primary goal is to write logs to HDFS despite of condition of
# sidestream(s), so there can_fail option comes into play.
# On the other hand, we want some reliability for sidestream(s) too,
# we'd like to load-balance them using report_success=load_balance.
#
# It worth noting that (for each log category) this hierarchical structure
# of stores is processed by a single thread, so e. g. if one of network
# substores wait, entire hierarchy of substore calls wait (otherwise
# it requires introduction of per-substore log processing state, which
# adds a lot of complexity). In case of network substores this problem
# is handled by appropriate timeouts and reconnect_delays.


max_queue_size=11250000
check_interval=1
#seqtest_log_accepts=/home/makeev/scribe/complex-test/accepted_byscribe_log
#dbg_msg_logdir=/home/makeev/scribe/complex-test/dbg_msg_logdir
port=1463
num_thrift_server_threads=3

# default - simply write to HDFS
<store>
    category=default

    target_write_size=5000000
    max_write_interval=1
    
    
    type=file
    fs_type=hdfs
    base_filename=overwritten_by_category
    max_write_size=1000000
    log_calls=yes
    file_path=hdfs://devhdp1.p:9000/data/mt/stream
    create_symlink=no
    add_hostname_sub_directory=yes
    max_size=2000000000
    rotate_period=hourly
    rotate_hour=0
    rotate_minute=0
</store>


# advanced scheme, described above
<store>
category=bt_main
# kinda confusing to write report_success=all, but keep in mind
# that can_fail overrides this setting on per-substore basis;
# final result is: success if all of can_fail=no substores reported success
report_success=all
type=multi

target_write_size=5000000
max_write_interval=1

# hdfs store
<store0>
    type=file
    fs_type=hdfs
    base_filename=bt_main
    max_write_size=1000000
    log_calls=yes
    file_path=hdfs://devhdp1.p:9000/data/mt/stream
    create_symlink=no
    add_hostname_sub_directory=yes
    max_size=2000000000
    rotate_period=hourly
    rotate_hour=0
    rotate_minute=0
    sub_directory=bt_main
</store0>

# load-balanced high-availability sidestream scribe ['10.0.0.1:1463', '10.0.0.2:1463']
<store1>
    can_fail=yes
    type=multi
    report_success=load_balance

    <store0>
        type=network
        remote_host=10.0.0.1
        remote_port=1463
        # there is no need in large timeout in case of high-speed reliable LAN
        timeout=4000
        reconnect_delay=30000
    </store0>


    <store1>
        type=network
        remote_host=10.0.0.2
        remote_port=1463
        timeout=4000
        reconnect_delay=30000
    </store1>
</store1>

</store>

